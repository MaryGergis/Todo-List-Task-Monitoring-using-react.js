{"version":3,"file":"static/js/464.943a2e62.chunk.js","mappings":"mNAMA,MA4CA,EA5CoBA,KAClB,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,OACT,YAAEC,IAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,IAC5BC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CAAC,GAa1C,OAXAC,EAAAA,EAAAA,YAAU,KACRN,EAAYF,GACTS,MAAMC,IACLC,QAAQC,IAAI,aAAcF,GAC1BJ,EAAYI,EAAS,IAEtBG,OAAOC,IACNH,QAAQG,MAAM,+BAAgCA,EAAM,GACpD,GACH,CAACd,EAAIE,IAEHG,GAKHU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAaC,MAAO,CAAEC,MAAO,MAAOC,UAAW,OAAQC,UACpEL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWI,UACxBC,EAAAA,EAAAA,MAAA,OAAKL,UAAU,UAASI,SAAA,EACtBL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeI,UAC5BL,EAAAA,EAAAA,KAAA,OAAKO,IAAKjB,EAASkB,OAASC,EAAWR,UAAU,iCAAiCS,IAAI,WAGxFV,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUI,UACvBC,EAAAA,EAAAA,MAAA,OAAKL,UAAU,YAAWI,SAAA,EACxBC,EAAAA,EAAAA,MAAA,MAAIL,UAAU,aAAYI,SAAA,CAAC,KAACL,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcI,SAAC,aAAe,IAAEf,EAASqB,UACrFL,EAAAA,EAAAA,MAAA,MAAIL,UAAU,YAAWI,SAAA,CAAC,KAACL,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcI,SAAC,cAAgB,IAAEf,EAASsB,aACrFN,EAAAA,EAAAA,MAAA,KAAGL,UAAU,YAAWI,SAAA,CAAC,KAACL,EAAAA,EAAAA,KAAA,QAAMC,UAAU,uBAAsBI,SAAC,aAAgBf,EAASuB,gBAC1Fb,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACC,GAAI,SAASV,UACjBL,EAAAA,EAAAA,KAAA,UAAQC,UAAU,eAAcI,SAAC,2BAXXf,EAASL,SANpCe,EAAAA,EAAAA,KAAA,OAAAK,SAAK,cAuBN,C","sources":["Components/CRUD/TaskDetails.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport TasksContext from '../../ContextApis/TasksContext';\r\nimport taskImage from '../../Images/task.png'\r\n\r\nconst TaskDetails = () => {\r\n  const { id } = useParams();\r\n  const { getTaskById } = useContext(TasksContext);\r\n  const [taskItem, setTaskItem] = useState({});\r\n\r\n  useEffect(() => {\r\n    getTaskById(id)\r\n      .then((taskData) => {\r\n        console.log('Task Data:', taskData);\r\n        setTaskItem(taskData);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching task details:', error);\r\n      });\r\n  }, [id, getTaskById]);\r\n\r\n  if (!taskItem) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container \" style={{ width: '60%', marginTop: '12%' }}>\r\n      <div className=\"card mb-3\">\r\n        <div className=\"row g-0\" key={taskItem.id}>\r\n          <div className=\"col-md-6 w-50\">\r\n            <img src={taskItem.image || taskImage} className=\"img-fluid rounded-start w-auto\" alt=\"...\" />\r\n          </div>\r\n\r\n          <div className=\"col-md-6\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\"> <span className=\"text-primary\"> Title: </span> {taskItem.title}</h4>\r\n              <h5 className=\"card-text\"> <span className=\"text-primary\"> Due to: </span> {taskItem.deadline}</h5>\r\n              <p className=\"card-text\"> <span className=\"text-primary fw-bold\"> Notes: </span>{taskItem.description}</p>\r\n              <Link to={'/tasks'}>\r\n                <button className='btn btn-dark'> Go to Tasks </button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskDetails;\r\n"],"names":["TaskDetails","id","useParams","getTaskById","useContext","TasksContext","taskItem","setTaskItem","useState","useEffect","then","taskData","console","log","catch","error","_jsx","className","style","width","marginTop","children","_jsxs","src","image","taskImage","alt","title","deadline","description","Link","to"],"sourceRoot":""}